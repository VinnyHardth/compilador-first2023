INT int OK
ID x OK
PV ; OK
INT int OK
ID y OK
ABRE_COLC [ OK
NUM_INT 5 OK
FECHA_COLC ] OK
PV ; OK
INT int OK
ID func OK
ABRE_PAREN ( OK
INT int OK
ID x OK
FECHA_PAREN ) OK
ABRE_CHAV { OK
ID x OK
OP_ATRIB = OK
ID x OK
OP_SOMA + OK
NUM_INT 2 OK
PV ; OK
RETURN return OK
ID x OK
PV ; OK
FECHA_CHAV } OK
INT int OK
ID dobra_valor OK
ABRE_PAREN ( OK
INT int OK
ID x OK
FECHA_PAREN ) OK
ABRE_CHAV { OK
ID x OK
OP_ATRIB = OK
ID x OK
OP_MULT * OK
NUM_INT 2 OK
PV ; OK
FECHA_CHAV } OK
INT int OK
ID main OK
ABRE_PAREN ( OK
FECHA_PAREN ) OK
ABRE_CHAV { OK
ID x OK
OP_ATRIB = OK
NUM_INT 2 OK
PV ; OK
ID x OK
OP_ATRIB = OK
ID dobra_valor OK
ABRE_PAREN ( OK
ID func OK
ABRE_PAREN ( OK
ID x OK
FECHA_PAREN ) OK
FECHA_PAREN ) OK
PV ; OK
IF if OK
ABRE_PAREN ( OK
ID x OK
COMP_IGUAL == OK
NUM_INT 8 OK
FECHA_PAREN ) OK
ABRE_CHAV { OK
INT int OK
ID z OK
PV ; OK
ID z OK
OP_ATRIB = OK
NUM_INT 0 OK
PV ; OK
WHILE while OK
ABRE_PAREN ( OK
ID y OK
MENOR < OK
NUM_INT 50 OK
FECHA_PAREN ) OK
ABRE_CHAV { OK
ID z OK
OP_ATRIB = OK
ID y OK
OP_SOMA + OK
NUM_INT 1 OK
PV ; OK
FECHA_CHAV } OK
FECHA_CHAV } OK
ELSE else OK
ABRE_CHAV { OK
ID y OK
ABRE_COLC [ OK
NUM_INT 0 OK
FECHA_COLC ] OK
OP_ATRIB = OK
NUM_INT 0 OK
PV ; OK
ID y OK
ABRE_COLC [ OK
NUM_INT 1 OK
FECHA_COLC ] OK
OP_ATRIB = OK
NUM_INT 1 OK
PV ; OK
ID y OK
ABRE_COLC [ OK
NUM_INT 2 OK
FECHA_COLC ] OK
OP_ATRIB = OK
NUM_INT 2 OK
PV ; OK
ID y OK
ABRE_COLC [ OK
NUM_INT 3 OK
FECHA_COLC ] OK
OP_ATRIB = OK
NUM_INT 3 OK
PV ; OK
ID y OK
ABRE_COLC [ OK
NUM_INT 4 OK
FECHA_COLC ] OK
OP_ATRIB = OK
NUM_INT 4 OK
PV ; OK
FECHA_CHAV } OK
RETURN return OK
NUM_INT 0 OK
PV ; OK
FECHA_CHAV } OK
